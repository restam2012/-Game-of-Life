//package life;

import java.io.IOException;
import java.util.Random;
import java.util.Scanner;

public class Main {
    static int n, alive;
    static char[][] universe;
    static String generation_str, alive_str;
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        n = 20;//scanner.nextInt();
        int m = 99; //scanner.nextInt();
        int generation = 1;
        FirstUniverse firstUniverse = new FirstUniverse();
        State state = new State();
        universe = firstUniverse.firstGeneration(n);
        input(generation);
        while (m > 0) {
            try {
                if (System.getProperty("os.name").contains("Windows"))
                    new ProcessBuilder("cmd","/c","cls").inheritIO().start().waitFor();
                else
                    Runtime.getRuntime().exec("clear");
            }
            catch (IOException | InterruptedException e) {}

            universe = state.generation(universe, 1);
            input(++generation);
            m--;
        }
    }


    private static void input(int generation) {

        GameOfLife swingClass = new GameOfLife(/*n, "Generation #" + generation, "Alive: " + Main.alive, universe*/);
        generation_str = "Generation #" + generation;
        alive_str = "Alive: " + Main.alive;
        /* System.out.println("Generation #" + generation);
        System.out.println("Alive: " + Main.alive);
        for (int i = 0; i < universe.length; i++) {
            for (int j = 0; j < universe[i].length; j++) {
                System.out.print(universe[i][j]);
            }
            System.out.println();
        }*/
    }

}

//package life;

import java.lang.reflect.Array;
import java.util.Arrays;

public class State {
    public char[][] generation(char[][] universe, int m){
        Main.alive = 0;
        if (m == 0) return universe;
        char[][] oldUniverse = universe;
        char[][] newUniverse = new char[universe.length][universe.length];
        int count;
        int h, w, h1, w1;
        for (int k = 0; k < m; k++) {
            for (int i = 0; i < universe.length; i++){
                for (int j = 0; j < universe[0].length; j++) {
                    count = 0;
                    for (int i1 = i - 1; i1 <= i + 1; i1++) {
                        for (int j1 = j - 1; j1 <= j + 1; j1++) {
                            if (i1 != i || j1 != j) {
                                // System.out.println(i + " " + i1 + " " + j + " " + j1);
                                count += check(oldUniverse, i1 < 0 ? universe.length - 1 : i1 == universe.length ? 0 : i1,
                                        j1 < 0 ? universe[i].length - 1 : j1 == universe[i].length ? 0 : j1);
                            }
                        }
                    }
                    if (oldUniverse[i][j] == 'O' && (count == 3 || count == 2)) newUniverse[i][j] = 'O';
                    else if (count == 3) newUniverse[i][j] = 'O';
                    else newUniverse[i][j] = ' ';
                    if (newUniverse[i][j] == 'O') Main.alive++;
                }
            }
            for (int i1 = 0; i1 < oldUniverse.length; i1++) {
                for (int j1 = 0; j1 < oldUniverse[i1].length; j1++) {
                    oldUniverse[i1][j1] = newUniverse[i1][j1];
                }
            }
        }

        return newUniverse;
    }

    private int check(char[][] oldUniverse, int i, int j) {
        if (oldUniverse[i][j] == 'O') return 1;
        else return 0;
    }

}

//package life;

import java.util.Random;

public class FirstUniverse {

    public char[][] firstGeneration(int n) {
        Main.alive = 0;
        Random random = new Random();
        char universe[][] = new char[n][n];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                boolean b = random.nextBoolean();
                universe[i][j] = b ? 'O' : ' ';
                if (universe[i][j] == 'O') Main.alive++;
            }
        }
        return universe;
    }
}

//package life;

import javax.swing.*;
import java.awt.*;
import java.util.Locale;

public class GameOfLife extends JFrame {
    public GameOfLife(/*int n, String textG, String textA, char[][] universe*/){
        setSize(500, 500);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BoxLayout(getContentPane(), BoxLayout.Y_AXIS));

        JLabel GenerationLabel = new JLabel();
        GenerationLabel.setName("GenerationLabel");
        GenerationLabel.setText(Main.generation_str);
        GenerationLabel.setHorizontalAlignment(JLabel.LEFT);
        add(GenerationLabel);

        JLabel AliveLabel = new JLabel();
        AliveLabel.setText(Main.alive_str);
        AliveLabel.setName("AliveLabel");
        add(AliveLabel);
        JPanel grid = new JPanel();
        grid.setBounds(10, 50, 280, 250);
        grid.setLayout(new GridLayout(20, 20));
        for(int i = 0; i < 20; i++) {
            for (int j = 0; j < 20; j++) {
                grid.add(new MyPannel(' '));
            }
        }
        add(grid);
        setVisible(true);
    }

}

//package life;

import javax.swing.*;
import java.awt.*;

public class MyPannel extends JPanel {
    char ch;
    MyPannel(char ch) {
        this.ch = ch;
    }
    public void paint(Graphics g) {

        if (ch == ' ') {
            g.setColor(Color.BLACK);
            g.fillRect(0, 0, getWidth()-1, getHeight()-1);
        }
        else g.drawRect(0,0,getWidth()-1, getHeight()-1);

    }
}
